version: 2

workflows:
  version: 2
  build_test_install:
    jobs:
      - build
      - test:
          requires:
            - build
      - export_test:
          requires:
            - build
      - install:
          requires:
            - build
      - install_test:
          requires:
            - install
      - code_coverage

  build_and_deploy_docs:
    jobs:
      - build_docs
      - deploy_docs:
          requires:
            - build_docs
          filters:
            branches:
              only: master

jobs:
  build:
    docker:
      - image: lyrahgames/pxart-test-tools:latest
    steps:
      - checkout
      - run:
          name: build
          command: |
            mkdir build
            cd build
            cmake ..
            cmake --build .
      - persist_to_workspace:
          root: .
          paths:
            - build

  test:
    docker:
      - image: lyrahgames/pxart-test-tools:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: test
          command: |
            cd build
            ctest --verbose

  export_test:
    docker:
      - image: lyrahgames/pxart-test-tools:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: export_test
          command: |
            cd build
            cmake ..
            cd ../tests
            mkdir build
            cd build
            cmake ..
            cmake --build .
            ctest --verbose

  install:
    docker:
      - image: lyrahgames/pxart-test-tools:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: install
          command: |
            cd build
            cmake --build . --target install
      - persist_to_workspace:
          root: /
          paths:
            - usr/local

  install_test:
    docker:
      - image: lyrahgames/pxart-test-tools:latest
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run:
          name: install_test
          command: |
            cd tests
            mkdir build
            cd build
            cmake ..
            cmake --build .
            ctest --verbose

  code_coverage:
    docker:
      - image: lyrahgames/pxart-test-tools:latest
    steps:
      - checkout
      - run:
          name: code_coverage
          command: |
            mkdir build
            cd build
            # CXXFLAGS="-g" cmake -DCMAKE_BUILD_TYPE=Debug -G Ninja ..
            # cmake --build .
            # kcov --include-path=.. ./code_coverage tests/main_tests
            # bash <(curl -s https://codecov.io/bash) -s code_coverage
            CXXFLAGS="-g -O0 -fprofile-arcs -ftest-coverage" LDFLAGS="-fprofile-arcs -ftest-coverage" cmake -DCMAKE_BUILD_TYPE=Debug -G Ninja ..
            cmake --build .
            lcov -c -i -d . -o coverage_base.info
            ctest --verbose
            lcov -c -d . -o coverage_test.info
            lcov -a coverage_base.info -a coverage_test.info -o coverage_total.info
            genhtml coverage_total.info -o coverage
            bash <(curl -s https://codecov.io/bash)

  build_docs:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r docs/main/requirements.txt
      - run:
          name: Build docs
          command: |
            cd docs/main
            mkdocs build
      - persist_to_workspace:
          root: docs/main
          paths: site

  deploy_docs:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: docs/main
      - run:
          name: Disable jekyll builds
          command: touch docs/main/site/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "markuspawellek@gmail.com"
            git config user.name "circleci"
      - add_ssh_keys:
          fingerprints:
            - "3b:b3:b0:f5:a0:3a:73:28:49:e2:34:11:f2:3d:3e:3b"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/main/site
